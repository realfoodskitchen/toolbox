# 1. Connect to Microsoft Graph
Connect-MgGraph -Scopes `
    "DeviceManagementManagedDevices.Read.All", `
    "DeviceManagementApps.Read.All", `
    "DeviceManagementConfiguration.Read.All"

# 2. Submit the Export Job for userAppInventory
$jobBody = @{
    reportName = "userAppInventory"
    format     = "csv"
    reportType = "app"
} | ConvertTo-Json -Depth 3

$exportJob = Invoke-MgGraphRequest -Method POST `
    -Uri "https://graph.microsoft.com/beta/deviceManagement/reports/exportJobs" `
    -Body $jobBody `
    -ContentType "application/json"

$jobId = $exportJob.id
Write-Host "Job submitted: $jobId" -ForegroundColor Green

# 3. Poll the export job until it's completed
$jobUri = "https://graph.microsoft.com/beta/deviceManagement/reports/exportJobs/$jobId"
do {
    Start-Sleep -Seconds 5
    $jobStatus = Invoke-MgGraphRequest -Method GET -Uri $jobUri
    Write-Host "Waiting... Job status: $($jobStatus.status)"
} while ($jobStatus.status -ne "completed")

# 4. Download the report
$downloadUrl = $jobStatus.url
$masterCsv = ".\userAppInventory_Master.csv"
Invoke-WebRequest -Uri $downloadUrl -OutFile $masterCsv
Write-Host "Master report saved to: $masterCsv" -ForegroundColor Cyan

# 5. Load the CSV
$appData = Import-Csv $masterCsv

# 6. Export per-device reports
$perDeviceFolder = ".\userAppInventory_PerDevice"
if (-not (Test-Path $perDeviceFolder)) {
    New-Item -Path $perDeviceFolder -ItemType Directory | Out-Null
}

$appData | Group-Object DeviceName | ForEach-Object {
    $deviceName = $_.Name -replace '[\\/:*?"<>|]', '_'  # Sanitize file name
    $filePath = Join-Path $perDeviceFolder "$deviceName.csv"
    $_.Group | Export-Csv -Path $filePath -NoTypeInformation -Encoding UTF8
    Write-Host "Exported: $filePath"
}